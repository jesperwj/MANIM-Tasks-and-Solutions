[
  {
    "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3",
    "final_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement. A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement. A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-86c6a42f.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-86c6a42f.mp3"
  },
  {
    "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3",
    "final_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If a N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3",
    "final_audio": "if-a-n-times-n-square-matrix-has-n-distinct-2d65bad1.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I",
    "input_data": {
      "input_text": "V I",
      "service": "gtts"
    },
    "original_audio": "v-i-2951e06d.mp3",
    "final_audio": "v-i-2951e06d.mp3"
  },
  {
    "input_text": "is the eigenvector corresponding to",
    "input_data": {
      "input_text": "is the eigenvector corresponding to",
      "service": "gtts"
    },
    "original_audio": "is-the-eigenvector-corresponding-to-3178669c.mp3",
    "final_audio": "is-the-eigenvector-corresponding-to-3178669c.mp3"
  },
  {
    "input_text": "lambda I",
    "input_data": {
      "input_text": "lambda I",
      "service": "gtts"
    },
    "original_audio": "lambda-i-ca56273b.mp3",
    "final_audio": "lambda-i-ca56273b.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding to",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding to",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-to-c44891f2.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-to-c44891f2.mp3"
  },
  {
    "input_text": "lambda I",
    "input_data": {
      "input_text": "lambda I",
      "service": "gtts"
    },
    "original_audio": "lambda-i-ca56273b.mp3",
    "final_audio": "lambda-i-ca56273b.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I",
    "input_data": {
      "input_text": "V I",
      "service": "gtts"
    },
    "original_audio": "v-i-2951e06d.mp3",
    "final_audio": "v-i-2951e06d.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "service": "gtts"
    },
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3"
  },
  {
    "input_text": "Where lambda I and lambda J are distinct",
    "input_data": {
      "input_text": "Where lambda I and lambda J are distinct",
      "service": "gtts"
    },
    "original_audio": "where-lambda-i-and-lambda-j-are-distinct-29a44d95.mp3",
    "final_audio": "where-lambda-i-and-lambda-j-are-distinct-29a44d95.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "service": "gtts"
    },
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "service": "gtts"
    },
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "service": "gtts"
    },
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "service": "gtts"
    },
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "service": "gtts"
    },
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "service": "gtts"
    },
    "original_audio": "must-be-linearly-independent-b799cb3b.mp3",
    "final_audio": "must-be-linearly-independent-b799cb3b.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "service": "gtts"
    },
    "original_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3"
  },
  {
    "input_text": "two different eigenvalues, because it",
    "input_data": {
      "input_text": "two different eigenvalues, because it",
      "service": "gtts"
    },
    "original_audio": "two-different-eigenvalues-because-it-8caec1bb.mp3",
    "final_audio": "two-different-eigenvalues-because-it-8caec1bb.mp3"
  },
  {
    "input_text": "cannot be stretched in two different ways.",
    "input_data": {
      "input_text": "cannot be stretched in two different ways.",
      "service": "gtts"
    },
    "original_audio": "cannot-be-stretched-in-two-different-ways-f8b33cab.mp3",
    "final_audio": "cannot-be-stretched-in-two-different-ways-f8b33cab.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "service": "gtts"
    },
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "service": "gtts"
    },
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "service": "gtts"
    },
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "service": "gtts"
    },
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "service": "gtts"
    },
    "original_audio": "must-be-linearly-independent-b799cb3b.mp3",
    "final_audio": "must-be-linearly-independent-b799cb3b.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "service": "gtts"
    },
    "original_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3"
  },
  {
    "input_text": "two different eigenvalues, because itcannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because itcannot be stretched in two different ways.",
      "service": "gtts"
    },
    "original_audio": "two-different-eigenvalues-because-itcannot-be-e123cd4c.mp3",
    "final_audio": "two-different-eigenvalues-because-itcannot-be-e123cd4c.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "service": "gtts"
    },
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "service": "gtts"
    },
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "service": "gtts"
    },
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "service": "gtts"
    },
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "service": "gtts"
    },
    "original_audio": "must-be-linearly-independent-b799cb3b.mp3",
    "final_audio": "must-be-linearly-independent-b799cb3b.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "service": "gtts"
    },
    "original_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3"
  },
  {
    "input_text": "two different eigenvalues, because itcannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because itcannot be stretched in two different ways.",
      "service": "gtts"
    },
    "original_audio": "two-different-eigenvalues-because-itcannot-be-e123cd4c.mp3",
    "final_audio": "two-different-eigenvalues-because-itcannot-be-e123cd4c.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "service": "gtts"
    },
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-e14cbcc3.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "service": "gtts"
    },
    "original_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-56ee0692.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "service": "gtts"
    },
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c6de3b4e.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "service": "gtts"
    },
    "original_audio": "the-correct-answer-is-a-fe137575.mp3",
    "final_audio": "the-correct-answer-is-a-fe137575.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "service": "gtts"
    },
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-1412c8b2.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "service": "gtts"
    },
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-376a52f2.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "service": "gtts"
    },
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-71997740.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "service": "gtts"
    },
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-df731a8a.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "service": "gtts"
    },
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-96e1ea66.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "service": "gtts"
    },
    "original_audio": "applying-the-transformation-a-3356c83a.mp3",
    "final_audio": "applying-the-transformation-a-3356c83a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "service": "gtts"
    },
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-a2dc99b6.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "service": "gtts"
    },
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-35afab97.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "service": "gtts"
    },
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-261a8ebf.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "service": "gtts"
    },
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a4d15895.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "service": "gtts"
    },
    "original_audio": "must-be-linearly-independent-b799cb3b.mp3",
    "final_audio": "must-be-linearly-independent-b799cb3b.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "service": "gtts"
    },
    "original_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-ea8d240e.mp3"
  },
  {
    "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
      "service": "gtts"
    },
    "original_audio": "two-different-eigenvalues-because-it-cannot-be-09855647.mp3",
    "final_audio": "two-different-eigenvalues-because-it-cannot-be-09855647.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct egienvalues, then it is diagonalizable",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct egienvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct egienvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 212,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 375,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9250000,
        "duration_milliseconds": 175,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 225,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 200,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 487,
        "text_offset": 36,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 862,
        "text_offset": 45,
        "word_length": 11,
        "text": "egienvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38750000,
        "duration_milliseconds": 175,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 162,
        "text_offset": 58,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 125,
        "text_offset": 63,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43750000,
        "duration_milliseconds": 137,
        "text_offset": 66,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45250000,
        "duration_milliseconds": 75,
        "text_offset": 69,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-a968ce94.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-a968ce94.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 512,
        "text_offset": 13,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 7,
        "text": "answers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 212,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 462,
        "text_offset": 34,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 625,
        "text_offset": 51,
        "word_length": 9,
        "text": "statement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3"
  },
  {
    "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "A, true. B, false. C, it depends. Or D, I don't know.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">A, true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">A, true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 87,
        "text_offset": 0,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1500000,
        "duration_milliseconds": 0,
        "text_offset": 1,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 1625000,
        "duration_milliseconds": 212,
        "text_offset": 3,
        "word_length": 4,
        "text": "true",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 187,
        "text_offset": 9,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 0,
        "text_offset": 10,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 462,
        "text_offset": 12,
        "word_length": 5,
        "text": "false",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 112,
        "text_offset": 19,
        "word_length": 1,
        "text": "C",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 0,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 19125000,
        "duration_milliseconds": 75,
        "text_offset": 22,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 500,
        "text_offset": 25,
        "word_length": 7,
        "text": "depends",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 100,
        "text_offset": 32,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "Or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 112,
        "text_offset": 37,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31125000,
        "duration_milliseconds": 0,
        "text_offset": 38,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 62,
        "text_offset": 40,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "duration_milliseconds": 162,
        "text_offset": 42,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 275,
        "text_offset": 48,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36625000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c2217889.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c2217889.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 112,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1750000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 287,
        "text_offset": 12,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 112,
        "text_offset": 22,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "the-correct-answer-is-a-82563a79.mp3",
    "final_audio": "the-correct-answer-is-a-82563a79.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 150,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 587,
        "text_offset": 3,
        "word_length": 10,
        "text": "understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 187,
        "text_offset": 18,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 400,
        "text_offset": 30,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 450,
        "text_offset": 38,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 37,
        "text_offset": 58,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 187,
        "text_offset": 60,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 712,
        "text_offset": 68,
        "word_length": 11,
        "text": "Eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 850,
        "text_offset": 84,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 450,
        "text_offset": 6,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 50,
        "text_offset": 15,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 437,
        "text_offset": 17,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 450,
        "text_offset": 25,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 187,
        "text_offset": 32,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 375,
        "text_offset": 37,
        "word_length": 4,
        "text": "size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 162,
        "text_offset": 42,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 375,
        "text_offset": 44,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 200,
        "text_offset": 50,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 0,
        "text_offset": 51,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 650,
        "text_offset": 58,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 325,
        "text_offset": 70,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 350,
        "text_offset": 77,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 87,
        "text_offset": 78,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 375,
        "text_offset": 80,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 212,
        "text_offset": 87,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 162,
        "text_offset": 89,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57750000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 162,
        "text_offset": 97,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60500000,
        "duration_milliseconds": 125,
        "text_offset": 101,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 112,
        "text_offset": 104,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63125000,
        "duration_milliseconds": 300,
        "text_offset": 107,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 300,
        "text_offset": 114,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 100,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 50,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 462,
        "text_offset": 18,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 637,
        "text_offset": 26,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 2,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 175,
        "text_offset": 4,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 75,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 650,
        "text_offset": 11,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 637,
        "text_offset": 23,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 37,
        "word_length": 8,
        "text": "tolambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 212,
        "text_offset": 46,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 362,
        "text_offset": 3,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 100,
        "text_offset": 10,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 525,
        "text_offset": 12,
        "word_length": 10,
        "text": "determines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 212,
        "text_offset": 27,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 475,
        "text_offset": 31,
        "word_length": 9,
        "text": "stretches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 487,
        "text_offset": 41,
        "word_length": 5,
        "text": "after",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 8,
        "text": "applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 800,
        "text_offset": 13,
        "word_length": 14,
        "text": "transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 137,
        "text_offset": 28,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "applying-the-transformation-a-1dd3609a.mp3",
    "final_audio": "applying-the-transformation-a-1dd3609a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 462,
        "text_offset": 4,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 62,
        "text_offset": 13,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 337,
        "text_offset": 15,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 575,
        "text_offset": 25,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 337,
        "text_offset": 43,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 337,
        "text_offset": 6,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 250,
        "text_offset": 13,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 325,
        "text_offset": 19,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 26,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 612,
        "text_offset": 32,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 275,
        "text_offset": 11,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 725,
        "text_offset": 20,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 675,
        "text_offset": 32,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27625000,
        "duration_milliseconds": 125,
        "text_offset": 46,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 375,
        "text_offset": 56,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 875,
        "text_offset": 0,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 137,
        "text_offset": 13,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 262,
        "text_offset": 16,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 362,
        "text_offset": 20,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 937,
        "text_offset": 30,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 4,
        "text": "must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 562,
        "text_offset": 8,
        "word_length": 8,
        "text": "linearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 837,
        "text_offset": 17,
        "word_length": 11,
        "text": "independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "must-be-linearly-independent-45c5a370.mp3",
    "final_audio": "must-be-linearly-independent-45c5a370.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 637,
        "text_offset": 4,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 362,
        "text_offset": 16,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 662,
        "text_offset": 26,
        "word_length": 10,
        "text": "associated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 287,
        "text_offset": 37,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3"
  },
  {
    "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 762,
        "text_offset": 14,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 0,
        "text_offset": 25,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 250,
        "text_offset": 27,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 137,
        "text_offset": 35,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 350,
        "text_offset": 38,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 450,
        "text_offset": 48,
        "word_length": 9,
        "text": "stretched",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 337,
        "text_offset": 65,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 4,
        "text": "ways",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3",
    "final_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3"
  },
  {
    "input_text": "Let's go back to the original question:",
    "input_data": {
      "input_text": "Let's go back to the original question:",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 237,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 425,
        "text_offset": 21,
        "word_length": 8,
        "text": "original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 600,
        "text_offset": 30,
        "word_length": 8,
        "text": "question",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3",
    "final_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N different eigenvalues",
    "input_data": {
      "input_text": "If an N times N square matrix has N different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 137,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 437,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 187,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 350,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 250,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 925,
        "text_offset": 46,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3"
  },
  {
    "input_text": "is it diagonalizable?",
    "input_data": {
      "input_text": "is it diagonalizable?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2250000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "is-it-diagonalizable-cbcdde64.mp3",
    "final_audio": "is-it-diagonalizable-cbcdde64.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 112,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1750000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 200,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 375,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 175,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 225,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 187,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 500,
        "text_offset": 36,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 850,
        "text_offset": 45,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 162,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 150,
        "text_offset": 58,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 137,
        "text_offset": 66,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 62,
        "text_offset": 69,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-b462daec.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-b462daec.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 512,
        "text_offset": 13,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 7,
        "text": "answers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 212,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 462,
        "text_offset": 34,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 625,
        "text_offset": 51,
        "word_length": 9,
        "text": "statement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3"
  },
  {
    "input_text": ". A, true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": ". A, true. B, false. C, it depends. Or D, I don't know.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">. A, true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">. A, true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 87,
        "text_offset": 0,
        "word_length": 3,
        "text": ". A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 0,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 212,
        "text_offset": 5,
        "word_length": 4,
        "text": "true",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 187,
        "text_offset": 11,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 0,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 462,
        "text_offset": 14,
        "word_length": 5,
        "text": "false",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 19750000,
        "duration_milliseconds": 112,
        "text_offset": 21,
        "word_length": 1,
        "text": "C",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 0,
        "text_offset": 22,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 75,
        "text_offset": 24,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 500,
        "text_offset": 27,
        "word_length": 7,
        "text": "depends",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 100,
        "text_offset": 34,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 112,
        "text_offset": 36,
        "word_length": 2,
        "text": "Or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33125000,
        "duration_milliseconds": 0,
        "text_offset": 40,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 62,
        "text_offset": 42,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 275,
        "text_offset": 50,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c8e70d30.mp3",
    "final_audio": "a-true-b-false-c-it-depends-or-d-i-don-t-know-c8e70d30.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 112,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1750000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 287,
        "text_offset": 12,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 112,
        "text_offset": 22,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "the-correct-answer-is-a-82563a79.mp3",
    "final_audio": "the-correct-answer-is-a-82563a79.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 150,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 587,
        "text_offset": 3,
        "word_length": 10,
        "text": "understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 187,
        "text_offset": 18,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 400,
        "text_offset": 30,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 450,
        "text_offset": 38,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 37,
        "text_offset": 58,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 187,
        "text_offset": 60,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 712,
        "text_offset": 68,
        "word_length": 11,
        "text": "Eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 850,
        "text_offset": 84,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 450,
        "text_offset": 6,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 50,
        "text_offset": 15,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 437,
        "text_offset": 17,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 450,
        "text_offset": 25,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 187,
        "text_offset": 32,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 375,
        "text_offset": 37,
        "word_length": 4,
        "text": "size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 162,
        "text_offset": 42,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 375,
        "text_offset": 44,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 200,
        "text_offset": 50,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 0,
        "text_offset": 51,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 650,
        "text_offset": 58,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 325,
        "text_offset": 70,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 350,
        "text_offset": 77,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 87,
        "text_offset": 78,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 375,
        "text_offset": 80,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 212,
        "text_offset": 87,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 162,
        "text_offset": 89,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57750000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 162,
        "text_offset": 97,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60500000,
        "duration_milliseconds": 125,
        "text_offset": 101,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 112,
        "text_offset": 104,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63125000,
        "duration_milliseconds": 300,
        "text_offset": 107,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 300,
        "text_offset": 114,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 100,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 50,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 462,
        "text_offset": 18,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 637,
        "text_offset": 26,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 2,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 175,
        "text_offset": 4,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 75,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 650,
        "text_offset": 11,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 637,
        "text_offset": 23,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 37,
        "word_length": 8,
        "text": "tolambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 212,
        "text_offset": 46,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 362,
        "text_offset": 3,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 100,
        "text_offset": 10,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 525,
        "text_offset": 12,
        "word_length": 10,
        "text": "determines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 212,
        "text_offset": 27,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 475,
        "text_offset": 31,
        "word_length": 9,
        "text": "stretches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 487,
        "text_offset": 41,
        "word_length": 5,
        "text": "after",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 8,
        "text": "applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 800,
        "text_offset": 13,
        "word_length": 14,
        "text": "transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 137,
        "text_offset": 28,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "applying-the-transformation-a-1dd3609a.mp3",
    "final_audio": "applying-the-transformation-a-1dd3609a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 462,
        "text_offset": 4,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 62,
        "text_offset": 13,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 337,
        "text_offset": 15,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 575,
        "text_offset": 25,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 337,
        "text_offset": 43,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 337,
        "text_offset": 6,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 250,
        "text_offset": 13,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 325,
        "text_offset": 19,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 26,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 612,
        "text_offset": 32,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 275,
        "text_offset": 11,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 725,
        "text_offset": 20,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 675,
        "text_offset": 32,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27625000,
        "duration_milliseconds": 125,
        "text_offset": 46,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 375,
        "text_offset": 56,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 875,
        "text_offset": 0,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 137,
        "text_offset": 13,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 262,
        "text_offset": 16,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 362,
        "text_offset": 20,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 937,
        "text_offset": 30,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 4,
        "text": "must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 562,
        "text_offset": 8,
        "word_length": 8,
        "text": "linearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 837,
        "text_offset": 17,
        "word_length": 11,
        "text": "independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "must-be-linearly-independent-45c5a370.mp3",
    "final_audio": "must-be-linearly-independent-45c5a370.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 637,
        "text_offset": 4,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 362,
        "text_offset": 16,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 662,
        "text_offset": 26,
        "word_length": 10,
        "text": "associated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 287,
        "text_offset": 37,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3"
  },
  {
    "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 762,
        "text_offset": 14,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 0,
        "text_offset": 25,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 250,
        "text_offset": 27,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 137,
        "text_offset": 35,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 350,
        "text_offset": 38,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 450,
        "text_offset": 48,
        "word_length": 9,
        "text": "stretched",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 337,
        "text_offset": 65,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 4,
        "text": "ways",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3",
    "final_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3"
  },
  {
    "input_text": "Let's go back to the original question:",
    "input_data": {
      "input_text": "Let's go back to the original question:",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 237,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 425,
        "text_offset": 21,
        "word_length": 8,
        "text": "original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 600,
        "text_offset": 30,
        "word_length": 8,
        "text": "question",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3",
    "final_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N different eigenvalues",
    "input_data": {
      "input_text": "If an N times N square matrix has N different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 137,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 437,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 187,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 350,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 250,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 925,
        "text_offset": 46,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3"
  },
  {
    "input_text": "is it diagonalizable?",
    "input_data": {
      "input_text": "is it diagonalizable?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2250000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "is-it-diagonalizable-cbcdde64.mp3",
    "final_audio": "is-it-diagonalizable-cbcdde64.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable",
    "input_data": {
      "input_text": "If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N distinct eigenvalues, then it is diagonalizable</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 112,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1750000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 200,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 375,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 175,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 225,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 187,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 500,
        "text_offset": 36,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 850,
        "text_offset": 45,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 162,
        "text_offset": 56,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 150,
        "text_offset": 58,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 137,
        "text_offset": 66,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 62,
        "text_offset": 69,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-distinct-b462daec.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-distinct-b462daec.mp3"
  },
  {
    "input_text": "Which of the following answers is correct for this statement.",
    "input_data": {
      "input_text": "Which of the following answers is correct for this statement.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Which of the following answers is correct for this statement.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 512,
        "text_offset": 13,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 7,
        "text": "answers",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 212,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 462,
        "text_offset": 34,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 625,
        "text_offset": 51,
        "word_length": 9,
        "text": "statement",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3",
    "final_audio": "which-of-the-following-answers-is-correct-for-this-af5fd60c.mp3"
  },
  {
    "input_text": "Option A , true. B, false. C, it depends. Or D, I don't know.",
    "input_data": {
      "input_text": "Option A , true. B, false. C, it depends. Or D, I don't know.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Option A , true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Option A , true. B, false. C, it depends. Or D, I don't know.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 6,
        "text": "Option",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 37,
        "text_offset": 7,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 0,
        "text_offset": 9,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 237,
        "text_offset": 11,
        "word_length": 4,
        "text": "true",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 15,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 187,
        "text_offset": 17,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 0,
        "text_offset": 18,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 462,
        "text_offset": 20,
        "word_length": 5,
        "text": "false",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 112,
        "text_offset": 27,
        "word_length": 1,
        "text": "C",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 0,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 75,
        "text_offset": 30,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 500,
        "text_offset": 33,
        "word_length": 7,
        "text": "depends",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 112,
        "text_offset": 42,
        "word_length": 2,
        "text": "Or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 1,
        "text": "D",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 0,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 62,
        "text_offset": 48,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34625000,
        "duration_milliseconds": 162,
        "text_offset": 50,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 275,
        "text_offset": 56,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "option-a-true-b-false-c-it-depends-or-d-i-don-t-364849c8.mp3",
    "final_audio": "option-a-true-b-false-c-it-depends-or-d-i-don-t-364849c8.mp3"
  },
  {
    "input_text": "The correct answer is A",
    "input_data": {
      "input_text": "The correct answer is A",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">The correct answer is A</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 112,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1750000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 287,
        "text_offset": 12,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 112,
        "text_offset": 22,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "the-correct-answer-is-a-82563a79.mp3",
    "final_audio": "the-correct-answer-is-a-82563a79.mp3"
  },
  {
    "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
    "input_data": {
      "input_text": "To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">To understand why this is the correct answer, let us take a look at Eigenvalues and Eigenvectors</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 150,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 587,
        "text_offset": 3,
        "word_length": 10,
        "text": "understand",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 187,
        "text_offset": 18,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 400,
        "text_offset": 30,
        "word_length": 7,
        "text": "correct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 450,
        "text_offset": 38,
        "word_length": 6,
        "text": "answer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 150,
        "text_offset": 46,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "us",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 37,
        "text_offset": 58,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 187,
        "text_offset": 60,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 712,
        "text_offset": 68,
        "word_length": 11,
        "text": "Eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 850,
        "text_offset": 84,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3",
    "final_audio": "to-understand-why-this-is-the-correct-answer-let-d572e86a.mp3"
  },
  {
    "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
    "input_data": {
      "input_text": "Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's consider a generic matrix A of size N times N, with eigenvalues lambda 1, lambda 2 all the way up to lambda N.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 450,
        "text_offset": 6,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 50,
        "text_offset": 15,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 437,
        "text_offset": 17,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 450,
        "text_offset": 25,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 187,
        "text_offset": 32,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 375,
        "text_offset": 37,
        "word_length": 4,
        "text": "size",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 162,
        "text_offset": 42,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 375,
        "text_offset": 44,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 200,
        "text_offset": 50,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 0,
        "text_offset": 51,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 650,
        "text_offset": 58,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 325,
        "text_offset": 70,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 350,
        "text_offset": 77,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 87,
        "text_offset": 78,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 375,
        "text_offset": 80,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 212,
        "text_offset": 87,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 162,
        "text_offset": 89,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57750000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 162,
        "text_offset": 97,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60500000,
        "duration_milliseconds": 125,
        "text_offset": 101,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 112,
        "text_offset": 104,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63125000,
        "duration_milliseconds": 300,
        "text_offset": 107,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 300,
        "text_offset": 114,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 100,
        "text_offset": 115,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3",
    "final_audio": "let-s-consider-a-generic-matrix-a-of-size-n-times-36511423.mp3"
  },
  {
    "input_text": "Let lambda I be a generic eigenvalue of A.",
    "input_data": {
      "input_text": "Let lambda I be a generic eigenvalue of A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let lambda I be a generic eigenvalue of A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 50,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 462,
        "text_offset": 18,
        "word_length": 7,
        "text": "generic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 637,
        "text_offset": 26,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3",
    "final_audio": "let-lambda-i-be-a-generic-eigenvalue-of-a-072c1809.mp3"
  },
  {
    "input_text": "V I is the eigenvector corresponding tolambda I",
    "input_data": {
      "input_text": "V I is the eigenvector corresponding tolambda I",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">V I is the eigenvector corresponding tolambda I</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 2,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 175,
        "text_offset": 4,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 75,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 650,
        "text_offset": 11,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 637,
        "text_offset": 23,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 37,
        "word_length": 8,
        "text": "tolambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 212,
        "text_offset": 46,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3",
    "final_audio": "v-i-is-the-eigenvector-corresponding-tolambda-i-a9b59ab5.mp3"
  },
  {
    "input_text": "so lambda I determines how V I stretches after",
    "input_data": {
      "input_text": "so lambda I determines how V I stretches after",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">so lambda I determines how V I stretches after</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 362,
        "text_offset": 3,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 100,
        "text_offset": 10,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 525,
        "text_offset": 12,
        "word_length": 10,
        "text": "determines",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 212,
        "text_offset": 27,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 475,
        "text_offset": 31,
        "word_length": 9,
        "text": "stretches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 487,
        "text_offset": 41,
        "word_length": 5,
        "text": "after",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3",
    "final_audio": "so-lambda-i-determines-how-v-i-stretches-after-1c620450.mp3"
  },
  {
    "input_text": "applying the transformation A.",
    "input_data": {
      "input_text": "applying the transformation A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">applying the transformation A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 8,
        "text": "applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 9,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 800,
        "text_offset": 13,
        "word_length": 14,
        "text": "transformation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 137,
        "text_offset": 28,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "applying-the-transformation-a-1dd3609a.mp3",
    "final_audio": "applying-the-transformation-a-1dd3609a.mp3"
  },
  {
    "input_text": "Now consider a different eigenvalue lambda J",
    "input_data": {
      "input_text": "Now consider a different eigenvalue lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Now consider a different eigenvalue lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 462,
        "text_offset": 4,
        "word_length": 8,
        "text": "consider",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 62,
        "text_offset": 13,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 337,
        "text_offset": 15,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 575,
        "text_offset": 25,
        "word_length": 10,
        "text": "eigenvalue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 337,
        "text_offset": 43,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3",
    "final_audio": "now-consider-a-different-eigenvalue-lambda-j-578bad0c.mp3"
  },
  {
    "input_text": "Where lambda J and lambda I are distinct",
    "input_data": {
      "input_text": "Where lambda J and lambda I are distinct",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Where lambda J and lambda I are distinct</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 5,
        "text": "Where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 337,
        "text_offset": 6,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 250,
        "text_offset": 13,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 325,
        "text_offset": 19,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 26,
        "word_length": 1,
        "text": "I",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 612,
        "text_offset": 32,
        "word_length": 8,
        "text": "distinct",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3",
    "final_audio": "where-lambda-j-and-lambda-i-are-distinct-2ec51d77.mp3"
  },
  {
    "input_text": "then let V J be the eigenvector corresponding to lambda J",
    "input_data": {
      "input_text": "then let V J be the eigenvector corresponding to lambda J",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">then let V J be the eigenvector corresponding to lambda J</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 3,
        "text": "let",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 1,
        "text": "V",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 275,
        "text_offset": 11,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 725,
        "text_offset": 20,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 675,
        "text_offset": 32,
        "word_length": 13,
        "text": "corresponding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27625000,
        "duration_milliseconds": 125,
        "text_offset": 46,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 6,
        "text": "lambda",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 375,
        "text_offset": 56,
        "word_length": 1,
        "text": "J",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3",
    "final_audio": "then-let-v-j-be-the-eigenvector-corresponding-to-14669f62.mp3"
  },
  {
    "input_text": "Eigenvectors of two different eigenvalues",
    "input_data": {
      "input_text": "Eigenvectors of two different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Eigenvectors of two different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 875,
        "text_offset": 0,
        "word_length": 12,
        "text": "Eigenvectors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 137,
        "text_offset": 13,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 262,
        "text_offset": 16,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 362,
        "text_offset": 20,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 937,
        "text_offset": 30,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3",
    "final_audio": "eigenvectors-of-two-different-eigenvalues-a211fb6e.mp3"
  },
  {
    "input_text": "must be linearly independent.",
    "input_data": {
      "input_text": "must be linearly independent.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">must be linearly independent.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 4,
        "text": "must",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 562,
        "text_offset": 8,
        "word_length": 8,
        "text": "linearly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 837,
        "text_offset": 17,
        "word_length": 11,
        "text": "independent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "must-be-linearly-independent-45c5a370.mp3",
    "final_audio": "must-be-linearly-independent-45c5a370.mp3"
  },
  {
    "input_text": "One eigenvector cannot be associated to",
    "input_data": {
      "input_text": "One eigenvector cannot be associated to",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">One eigenvector cannot be associated to</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 637,
        "text_offset": 4,
        "word_length": 11,
        "text": "eigenvector",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 362,
        "text_offset": 16,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 662,
        "text_offset": 26,
        "word_length": 10,
        "text": "associated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 287,
        "text_offset": 37,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3",
    "final_audio": "one-eigenvector-cannot-be-associated-to-59dc7339.mp3"
  },
  {
    "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
    "input_data": {
      "input_text": "two different eigenvalues, because it cannot be stretched in two different ways.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">two different eigenvalues, because it cannot be stretched in two different ways.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 337,
        "text_offset": 4,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 762,
        "text_offset": 14,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 0,
        "text_offset": 25,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 250,
        "text_offset": 27,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 137,
        "text_offset": 35,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 350,
        "text_offset": 38,
        "word_length": 6,
        "text": "cannot",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 450,
        "text_offset": 48,
        "word_length": 9,
        "text": "stretched",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 337,
        "text_offset": 65,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 4,
        "text": "ways",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3",
    "final_audio": "two-different-eigenvalues-because-it-cannot-be-b8bde430.mp3"
  },
  {
    "input_text": "Let's go back to the original question:",
    "input_data": {
      "input_text": "Let's go back to the original question:",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">Let's go back to the original question:</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 237,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 425,
        "text_offset": 21,
        "word_length": 8,
        "text": "original",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 600,
        "text_offset": 30,
        "word_length": 8,
        "text": "question",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3",
    "final_audio": "let-s-go-back-to-the-original-question-0d592cc8.mp3"
  },
  {
    "input_text": "If an N times N square matrix has N different eigenvalues",
    "input_data": {
      "input_text": "If an N times N square matrix has N different eigenvalues",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">If an N times N square matrix has N different eigenvalues</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 137,
        "text_offset": 3,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 437,
        "text_offset": 8,
        "word_length": 5,
        "text": "times",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 187,
        "text_offset": 14,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 350,
        "text_offset": 16,
        "word_length": 6,
        "text": "square",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 462,
        "text_offset": 23,
        "word_length": 6,
        "text": "matrix",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 250,
        "text_offset": 30,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 34,
        "word_length": 1,
        "text": "N",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 925,
        "text_offset": 46,
        "word_length": 11,
        "text": "eigenvalues",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3",
    "final_audio": "if-an-n-times-n-square-matrix-has-n-different-f11d6cf6.mp3"
  },
  {
    "input_text": "is it diagonalizable?",
    "input_data": {
      "input_text": "is it diagonalizable?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-CoraMultilingualNeural",
        "style": "e-learning",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-CoraMultilingualNeural\">\n        <mstts:express-as style=\"e-learning\">is it diagonalizable?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2250000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 14,
        "text": "diagonalizable",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "is-it-diagonalizable-cbcdde64.mp3",
    "final_audio": "is-it-diagonalizable-cbcdde64.mp3"
  }
]